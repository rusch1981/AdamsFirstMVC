@using AdamsFirstMVC.Models
@using Newtonsoft.Json
@model  AdamsFirstMVC.DAL.BandsUnitOfWork
@{
    ViewBag.Title = "Bands";
    Layout = "~/Views/Shared/_LayoutMandMHome.cshtml";
}
<div class="jumbotron" id="inherit-background">
    <h1>
        Bands:
    </h1>
</div>

<div id="smaller-content-helper" class="Band-content-helper">

        @foreach (var item in Model.GetBandImagesfromSetup())
        {
            <div class="row">
                <h2>@item.BandImageName</h2>
                <div class="col-lg-12 col-sm-12 col-xs-12">
                    @* replace the # symbols below with a url to have them link to another page or site. *@
                    <a href="@item.BandHref">
                        <img src="@item.BandImageSrc" alt="@item.BandImageAlt" class="thumbnail img-responsive">
                    </a>
                </div>
            </div>
        }

    </div>
    <div id="larger-content-center-helper" class="Band-content-helper">
        <div class="row">
            <div class="col-lg-12 col-sm-12 col-xs-12">

                @{var collage = Model.GetSetupCollage();}

                @{List<string> coords = Model.GetSetupClickableAreas().Select(x => x.ClickableAreaCoordinates).ToList();}

                <img id="Collage" class="thumbnail img-responsive" src="@collage.CollageSrc" alt="@collage.CollageAlt" usemap="#collageMap">
                <map name="collageMap">

                    @foreach (var item in Model.GetSetupClickableAreas())
                    {
                        <area class="areas" shape="@item.ClickableAreaShape" coords="@item.ClickableAreaCoordinates" href="@item.ClickableAreaHref" alt="@item.ClickableAreaAlt" />

                    }

                </map>
            </div>
        </div>
    </div>
    <script>
        //WORKS!!!!!
        var jSArray = @Html.Raw(Json.Encode(Model.GetSetupClickableAreasCoords().ToArray()));

        //works!!!
        $(window).load(function () {
            $("h1").text(document.getElementById('Collage').clientWidth);
        });
        //works!!!
        $(window).resize(function () {
            $("h1").text(document.getElementById('Collage').clientWidth);
        });

        //worked
        //$(window).load(function() {
        //    var $width = $("#Collage").width();
        //    $("h1").text($width);
        //});
        //$(window).resize(function () {
        //    var $width = $("#Collage").width();
        //    $("h1").text($width);
        //});


        //LOADS ONLY ONE FIRST COORD AS AN ARRAY OF CHARACTERS
        //$(window).load(function() {
        //    var $coord = $(".areas").attr("coords");
        //    $("h1").text($coord);
        //});

        //WORKS BUT DOESN'T Act LIKE AN ARRAY.  NO MATTER WHAT INDEX IS CALLED VIA GET THE WHOLE STRING IS RETURNED. .length() has not response.
        //var $allAttributes = $(".areas").map(function () {
        //    return $(this).attr("coords");
        //}).get();
        //$(window).load(function() {
        //    $("h1").text($allAttributes).length();
        //});
    </script>

